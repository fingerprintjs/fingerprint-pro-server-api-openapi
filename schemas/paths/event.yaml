get:
  tags:
    - Events
  operationId: 'getEvent'
  summary: Get an event by event ID
  description: |
    Get a detailed analysis of an individual identification event, including Smart Signals.

    Use `event_id` as the URL path parameter. This API method is scoped to a request, i.e. all returned information is by `event_id`.
  parameters:
    - name: event_id
      in: path
      required: true
      schema:
        type: string
      description: The unique [identifier](https://dev.fingerprint.com/reference/get-function#requestid) of each identification request (`requestId` can be used in its place).
  responses:
    '200':
      description: OK.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/Event.yaml'
          examples:
            200-ok:
              summary: Example response
              externalValue: 'examples/events/get_event_200.json'
    '400':
      description: "Bad request. The event Id provided is not valid."
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error/ErrorResponse.yaml'
          examples:
            400-bad-request:
              summary: Error response when the provided event Id is invalid.
              externalValue: 'examples/errors/400_event_id_invalid.json'
    '403':
      description: Forbidden. Access to this API is denied.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error/ErrorResponse.yaml'
          examples:
            403-secret-api-key-required:
              summary: Error response when the secret API key was not provided.
              externalValue: 'examples/errors/403_secret_api_key_required.json'
            403-secret-api-key-not-found:
              summary: Error response when the provided secret API key does not exist.
              externalValue: 'examples/errors/403_secret_api_key_not_found.json'
            429-too-many-requests-error:
              summary: Too many requests error
              externalValue: 'examples/errors/429_too_many_requests.json'
    '404':
      description: "Not found. The event Id cannot be found in this application's data."
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error/ErrorResponse.yaml'
          examples:
            404-request-not-found:
              summary: Error response when the provided event Id does not exist.
              externalValue: 'examples/errors/404_event_not_found.json'
    '500':
      description: Application error.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error/ErrorResponse.yaml'
          examples:
            500-error:
              summary: Request failed
              externalValue: 'examples/errors/500_internal_server_error.json'
patch:
  tags:
    - Events
  operationId: 'updateEvent'
  summary: Update an event
  description: |
    Change information in existing events specified by `event_id` or *flag suspicious events*.
    
    When an event is created, it can be assigned `linked_id` and `tags` submitted through the JS agent parameters. 
    This information might not have been available on the client initially, so the Server API permits updating these attributes after the fact.
    
    **Warning** It's not possible to update events older than one month. 
    
    **Warning** Trying to update an event immediately after creation may temporarily result in an 
    error (HTTP 409 Conflict. The event is not mutable yet.) as the event is fully propagated across our systems. In such a case, simply retry the request.
  parameters:
    - name: event_id
      in: path
      required: true
      schema:
        type: string
      description: The unique event [identifier](https://dev.fingerprint.com/reference/get-function#event_id).
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../components/schemas/EventUpdate.yaml'
  responses:
    '200':
      description: OK.
    '400':
      description: Bad request. The request payload is not valid.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error/ErrorResponse.yaml'
          examples:
            example:
              summary: Error response when the specified request payload is not valid and cannot be parsed.
              externalValue: 'examples/errors/400_request_body_invalid.json'
    '403':
      description: Forbidden. Access to this API is denied.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error/ErrorResponse.yaml'
          examples:
            403-secret-api-key-required:
              summary: Error response when the secret API key was not provided.
              externalValue: 'examples/errors/403_secret_api_key_required.json'
            403-secret-api-key-not-found:
              summary: Error response when the provided secret API key does not exist.
              externalValue: 'examples/errors/403_secret_api_key_not_found.json'
            403-wrong-region:
              summary: Error response when the API region is different from the region, the calling application is configured with.
              externalValue: 'examples/errors/403_wrong_region.json'
    '404':
      description: "Not found. The event Id cannot be found in this application's data."
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error/ErrorResponse.yaml'
          examples:
            404-request-not-found:
              summary: Error response when the provided event Id does not exist.
              externalValue: 'examples/errors/404_event_not_found.json'
    '409':
      description: Conflict. The event is not mutable yet.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error/ErrorResponse.yaml'
          examples:
            example:
              summary: Error response when the event is not mutable yet.
              externalValue: 'examples/errors/409_state_not_ready.json'
