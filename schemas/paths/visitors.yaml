get:
  tags:
    - Visitors
  operationId: 'getVisits'
  summary: Get visits by visitor ID
  description: |
    Get a history of visits (identification events) for a specific `visitorId`. Use the `visitorId` as a URL path parameter.
    Only information from the _Identification_ product is returned.
    
    #### Headers
    
    * `Retry-After` — Present in case of `429 Too many requests`. Indicates how long you should wait before making a follow-up request. The value is non-negative decimal integer indicating the seconds to delay after the response is received.
  parameters:
    - name: visitor_id
      description: Unique [visitor identifier](https://dev.fingerprint.com/docs/js-agent#visitorid) issued by Fingerprint Pro.
      in: path
      required: true
      schema:
        type: string
      example: uYIm7Ksp5rf00SllPhFp
    - name: request_id
      description: |
        Filter visits by `requestId`. 
        
        Every identification request has a unique identifier associated with it called `requestId`. This identifier is returned to the client in the identification [result](https://dev.fingerprint.com/docs/js-agent#requestid). When you filter visits by `requestId`, only one visit will be returned.
      in: query
      schema:
        type: string
        # example: 1654815516083.OX6kx8
    - name: linked_id
      description: |
        Filter visits by your custom identifier. 
        
        You can use [`linkedId`](https://dev.fingerprint.com/docs/js-agent#linkedid) to associate identification requests with your own identifier, for example: session ID, purchase ID, or transaction ID. You can then use this `linked_id` parameter to retrieve all events associated with your custom identifier.
      in: query
      schema:
        type: string
      required:
        false
      # example: some_id
    - name: limit
      description: |
        Limit scanned results. 
        
        For performance reasons, the API first scans some number of events before filtering them. Use `limit` to specify how many events are scanned before they are filtered by `requestId` or `linkedId`. Results are always returned sorted by the timestamp (most recent first).
        By default, the most recent 100 visits are scanned, the maximum is 500.
      in: query
      schema:
        type: integer
        format: int32
        minimum: 0
        # default: 0
        # example: 10
    - name: paginationKey
      description: |
        Use `paginationKey` to get the next page of results. 
        
        When more results are available (e.g., you requested 200 results using `limit` parameter, but a total of 600 results are available), the `paginationKey` top-level attribute is added to the response. The key corresponds to the `requestId` of the last returned event. In the following request, use that value in the `paginationKey` parameter to get the next page of results:
        
        1. First request, returning most recent 200 events: `GET api-base-url/visitors/:visitorId?limit=200`
        2. Use `response.paginationKey` to get the next page of results: `GET api-base-url/visitors/:visitorId?limit=200&paginationKey=1683900801733.Ogvu1j`
        
        Pagination happens during scanning and before filtering, so you can get less visits than the `limit` you specified with more available on the next page. When there are no more results available for scanning, the `paginationKey` attribute is not returned.
      in: query
      schema:
        type: string
      required:
        false
      # example: 1683900801733.Ogvu1j
    - name: before
      description: |
        ⚠️ Deprecated pagination method, please use `paginationKey` instead. Timestamp (in milliseconds since epoch) used to paginate results.
      in: query
      schema:
        type: integer
        format: int64
        minimum: 0
        # default: 0
        # example: 1654815517198
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../components/schemas/Response.yaml'
          examples:
            limit1:
              summary: Example response with limit=1
              externalValue: '/examples/get_visits_200_limit_1.json'
            limit500:
              summary: Example response with limit=500
              externalValue: '/examples/get_visits_200_limit_500.json'
    '403':
      description: Forbidden. The API Key is probably missing or incorrect.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ErrorVisits403.yaml'
          examples:
            example:
              summary: Forbidden
              externalValue: '/examples/get_visits_403_error.json'
    '429':
      description: Too Many Requests
      headers:
        Retry-After:
          description: Indicates how many seconds you should wait before attempting the next request.
          schema:
            type: integer
            format: int32
            minimum: 0
      content:
        application/json:
          schema:
            $ref: '../components/schemas/TooManyRequestsResponse.yaml'
          examples:
            example:
              summary: Too Many Requests
              externalValue: '/examples/get_visits_429_too_many_requests_error.json'
  x-readme:
    code-samples:
      - language: node
        name: Node SDK
        install: npm install @fingerprintjs/fingerprintjs-pro-server-api
        code: |
          import {
            FingerprintJsServerApiClient,
            Region,
          } from '@fingerprintjs/fingerprintjs-pro-server-api'
          
          const client = new FingerprintJsServerApiClient({
            apiKey: 'SERVER_API_KEY', // Replace with your key
            region: Region.Global, // Replace with your region
          })
          
          // Get visit history of a specific visitor
          client.getVisitorHistory('VISITOR_ID').then((visitorHistory) => {
            console.log(visitorHistory)
          })
      - language: php
        name: PHP SDK
        install: composer require fingerprint/fingerprint-pro-server-api-sdk
        code: |
          <?php
          require_once(__DIR__ . '/vendor/autoload.php');
          use Fingerprint\ServerAPI\Api\FingerprintApi;
          use Fingerprint\ServerAPI\Configuration;
          use GuzzleHttp\Client;
          
          $config = Configuration::getDefaultConfiguration(
            "SERVER_API_KEY", // Replace with your key
            Configuration::REGION_GLOBAL // Replace with your region
          );
          
          $client = new FingerprintApi(
            new Client(),
            $config
          );
          
          // Get visit history of a specific visitor
          try {
            $response = $client->getVisits("VISITOR_ID");
            echo "<pre>" . $response->__toString() . "</pre>";
          } catch (Exception $e) {
            echo $e->getMessage(), PHP_EOL;
          }
      - language: python
        name: Python SDK
        install: pip install fingerprint_pro_server_api_sdk
        code: |
          import fingerprint_pro_server_api_sdk
          from fingerprint_pro_server_api_sdk import EventResponse
          from fingerprint_pro_server_api_sdk import Response
          from fingerprint_pro_server_api_sdk.rest import ApiException
          
          configuration = fingerprint_pro_server_api_sdk.Configuration(
            api_key="SERVER_API_KEY", // Replace with your key
            region="us" // Replace with your region
          )
          api_instance = fingerprint_pro_server_api_sdk.FingerprintApi(configuration)
          
          # Get visit history of a specific visitor
          try:
            visits: Response = api_instance.get_visits("VISITOR_ID", limit=10)
            print(visits)
          except ApiException as e:
            print("Exception when getting visits: %s\n" % e)
      - language: golang
        name: Go SDK
        install: go get github.com/fingerprintjs/fingerprint-pro-server-api-go-sdk
        code: |
          package main
          
          import (
            "context"
            "fmt"
            "github.com/antihax/optional"
            "github.com/fingerprintjs/fingerprint-pro-server-api-go-sdk/v3/sdk"
            "log"
          )
          
          func main() {
            cfg := sdk.NewConfiguration()
            client := sdk.NewAPIClient(cfg)
          
            auth := context.WithValue(
              context.Background(),
              sdk.ContextAPIKey,
              sdk.APIKey{Key: "SERVER_API_KEY"}, // Replace with your key
            )
            cfg.ChangeRegion(sdk.RegionUS) // Replace with your region
          
            // Get visit history of a specific visitor
            getVisitsOpts := sdk.FingerprintApiGetVisitsOpts{
              Limit: optional.NewInt32(10),
            }
            history, historyHttpRes, historyErr :=
              client.FingerprintApi.GetVisits(auth, "VISITOR_ID", &getVisitsOpts)
            if err != nil {
              log.Fatal(err)
            }
            fmt.Printf("Visitor history: %s", history)
          }
      - language: java
        name: Java SDK
        code: |
          import com.fingerprint.api.FingerprintApi;
          import com.fingerprint.models.EventResponse;
          import com.fingerprint.models.Response;
          import com.fingerprint.sdk.ApiClient;
          import com.fingerprint.sdk.ApiException;
          import com.fingerprint.sdk.Configuration;
          import com.fingerprint.sdk.Region;
          
          public class FingerprintApiExample {
            public static void main(String... args) {
              ApiClient client = Configuration.getDefaultApiClient(
                "SERVER_API_KEY", // Replace with your key
                Region.GLOBAL // Replace with your region
              );
              FingerprintApi api = new FingerprintApi(client);
          
              // Get visit history of a specific visitor
              try {
                Response response = api.getVisits("VISITOR_ID");
                System.out.println(response.getVisits().toString());
              } catch (ApiException e) {
                System.err.println(e.getMessage());
              }
            }
          }
      - language: csharp
        name: C# SDK
        install: dotnet add package FingerprintPro.ServerSdk
        code: |
          using FingerprintPro.ServerSdk.Api;
          using FingerprintPro.ServerSdk.Client;
          
          var configuration = new Configuration("SERVER_API_KEY"); // Replace with your key
          configuration.Region = Region.Us; // Replace with your region
          
          var api = new FingerprintApi(
              configuration
          );
          
          // Get visit history of a specific visitor
          var visits = api.GetVisits("VISITOR_ID");
          Console.WriteLine(visits);
delete:
  tags:
    - Visitors
  operationId: 'deleteVisitorData'
  summary: Delete data by visitor ID
  description: |
    Request deleting all data associated with the specified visitor ID. This API is useful for compliance with privacy regulations.
    All delete requests are queued: 
    
    * Recent data (10 days or newer) belonging to the specified visitor will be deleted within 24 hours.
    * Data from older (11 days or more) identification events  will be deleted after 90 days.
    
    If you are interested in using this API, please [contact our support team](https://fingerprint.com/support/) to enable it for you. Otherwise, you will receive a 403.
  parameters:
    - name: visitor_id
      in: path
      description: The [visitor ID](https://dev.fingerprint.com/docs/js-agent#visitorid) you want to delete.
      required: true
      schema:
        type: string
  responses:
    '200':
      description: OK. The visitor ID is scheduled for deletion.
    '400':
      description: Bad request. The visitor ID parameter is missing or in the wrong format.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ErrorVisitor400Response.yaml'
          examples:
            400-empty-visitor-id:
              summary: Error response when the request does not include a visitor ID
              externalValue: '/examples/shared/400_error_empty_visitor_id.json'
            400-invalid-visitor-id:
              summary: Error response when the visitor ID is incorrectly formatted
              externalValue: '/examples/shared/400_error_incorrect_visitor_id.json'
    '403':
      description: Forbidden. Access to this API is denied.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ErrorCommon403Response.yaml'
          examples:
            403-feature-not-enabled:
              summary: Error response when this feature is not enabled for a subscription.
              externalValue: '/examples/shared/403_error_feature_not_enabled.json'
            403-token-not-found:
              summary: Error response when the provided secret API key does not exist.
              externalValue: '/examples/shared/403_error_token_not_found.json'
            403-token-required:
              summary: Error response when the secret API key was not provided.
              externalValue: '/examples/shared/403_error_token_required.json'
            403-wrong-region:
              summary: Error response when the API region is different from the region, the calling application is configured with.
              externalValue: '/examples/shared/403_error_wrong_region.json'

    '404':
      description: Not found. The visitor ID cannot be found in this application's data.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ErrorVisitor404Response.yaml'
          examples:
            example:
              summary: Not found
              externalValue: '/examples/shared/404_error_visitor_not_found.json'
    '429':
      description: Too Many Requests. The request is throttled.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ErrorCommon429Response.yaml'
          examples:
            example:
              summary: Too Many Requests
              externalValue: '/examples/shared/429_error_too_many_requests.json'
