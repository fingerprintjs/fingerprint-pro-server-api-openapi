get:
  tags:
    - Events
  operationId: 'getEvent'
  summary: Get event by request ID
  description: |
    Get a detailed analysis of an individual identification event, including Smart Signals. 
    Please note that the response includes mobile signals (e.g. `rootApps`) even if the request originated from a non-mobile platform.
    It is highly recommended that you **ignore** the mobile signals for such requests. 
    
    Use `requestId` as the URL path parameter. This API method is scoped to a request, i.e. all returned information is by `requestId`.
  parameters:
    - name: request_id
      in: path
      description: The unique [identifier](https://dev.fingerprint.com/docs/js-agent#requestid) of each identification request.
      required: true
      schema:
        type: string
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../components/schemas/EventResponse.yaml'
          examples:
            fullResponse:
              summary: Example response
              externalValue: 'examples/get_event_200.json'
            allErrorsResponse:
              summary: All failed signals
              externalValue: 'examples/get_event_200_all_errors.json'
            withBotdError:
              summary: BotD error
              externalValue: 'examples/get_event_200_botd_failed_error.json'
            withBotdTooManyRequestsError:
              summary: BotD too many requests error
              externalValue: 'examples/get_event_200_botd_too_many_requests_error.json'
            withIdentificationError:
              summary: Identification error
              externalValue: 'examples/get_event_200_identification_failed_error.json'
            withIdentificationTooManyRequestsError:
              summary: Identification too many requests error
              externalValue: 'examples/get_event_200_identification_too_many_requests_error.json'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ErrorCommon403Response.yaml'
          examples:
            example:
              summary: Forbidden
              externalValue: 'examples/get_event_403_error.json'
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ErrorEvent404Response.yaml'
          examples:
            example:
              summary: Not found
              externalValue: 'examples/get_event_404_error.json'
  x-readme:
    code-samples:
      - language: node
        name: Node SDK
        install: npm install @fingerprintjs/fingerprintjs-pro-server-api
        code: |
          import {
            FingerprintJsServerApiClient,
            Region,
          } from '@fingerprintjs/fingerprintjs-pro-server-api'
          
          const client = new FingerprintJsServerApiClient({
            apiKey: 'SERVER_API_KEY', // Replace with your key
            region: Region.Global, // Replace with your region
          })
          
          // Get a specific fingerprinting event
          client.getEvent('REQUEST_ID').then((event) => {
            console.log(event)
          })
      - language: php
        name: PHP SDK
        install: composer require fingerprint/fingerprint-pro-server-api-sdk
        code: |
          <?php
          require_once(__DIR__ . '/vendor/autoload.php');
          use Fingerprint\ServerAPI\Api\FingerprintApi;
          use Fingerprint\ServerAPI\Configuration;
          use GuzzleHttp\Client;
          
          $config = Configuration::getDefaultConfiguration(
            "SERVER_API_KEY", // Replace with your key
            Configuration::REGION_GLOBAL // Replace with your region
          );
          
          $client = new FingerprintApi(
            new Client(),
            $config
          );
          
          // Get a specific fingerprinting event
          try {
            $response = $client->getEvent("REQUEST_ID");
            echo "<pre>" . $response->__toString() . "</pre>";
          } catch (Exception $e) {
            echo $e->getMessage(), PHP_EOL;
          }
      - language: python
        name: Python SDK
        install: pip install fingerprint_pro_server_api_sdk
        code: |
          import fingerprint_pro_server_api_sdk
          from fingerprint_pro_server_api_sdk import EventResponse
          from fingerprint_pro_server_api_sdk import Response
          from fingerprint_pro_server_api_sdk.rest import ApiException
          
          configuration = fingerprint_pro_server_api_sdk.Configuration(
            api_key="SERVER_API_KEY", // Replace with your key
            region="us" // Replace with your region
          )
          api_instance = fingerprint_pro_server_api_sdk.FingerprintApi(configuration)
          
          # Get a specific fingerprinting event
          try:
              event: EventResponse = api_instance.get_event("REQUEST_ID")
              print(event)
          except ApiException as e:
              print("Exception when getting an event: %s\n" % e)
      - language: golang
        name: Go SDK
        install: go get github.com/fingerprintjs/fingerprint-pro-server-api-go-sdk
        code: |
          package main
          
          import (
            "context"
            "fmt"
            "github.com/antihax/optional"
            "github.com/fingerprintjs/fingerprint-pro-server-api-go-sdk/v3/sdk"
            "log"
          )
          
          func main() {
            cfg := sdk.NewConfiguration()
            client := sdk.NewAPIClient(cfg)
          
            auth := context.WithValue(
              context.Background(),
              sdk.ContextAPIKey,
              sdk.APIKey{Key: "SERVER_API_KEY"}, // Replace with your key
            )
            cfg.ChangeRegion(sdk.RegionUS) // Replace with your region
          
            // Get a specific fingerprinting event
            event, eventHttpRes, eventErr :=
              client.FingerprintApi.GetEvent(auth, "REQUEST_ID")
            if eventErr != nil {
              log.Fatal(eventErr)
            }
            fmt.Printf("Event: %s", event)
          }
      - language: java
        name: Java SDK
        code: |
          import com.fingerprint.api.FingerprintApi;
          import com.fingerprint.models.EventResponse;
          import com.fingerprint.models.Response;
          import com.fingerprint.sdk.ApiClient;
          import com.fingerprint.sdk.ApiException;
          import com.fingerprint.sdk.Configuration;
          import com.fingerprint.sdk.Region;
          
          public class FingerprintApiExample {
            public static void main(String... args) {
              ApiClient client = Configuration.getDefaultApiClient(
                "SERVER_API_KEY", // Replace with your key
                Region.GLOBAL // Replace with your region
              );
              FingerprintApi api = new FingerprintApi(client);
          
              // Get a specific fingerprinting event
              try {
                EventResponse response = api.getEvent("REQUEST_ID");
                System.out.println(response.getProducts().toString());
              } catch (ApiException e) {
                System.err.println(e.getMessage());
              }
            }
          }
      - language: csharp
        name: C# SDK
        install: dotnet add package FingerprintPro.ServerSdk
        code: |
          using FingerprintPro.ServerSdk.Api;
          using FingerprintPro.ServerSdk.Client;
          
          var configuration = new Configuration("SERVER_API_KEY"); // Replace with your key
          configuration.Region = Region.Us; // Replace with your region
          
          var api = new FingerprintApi(
              configuration
          );
          
          // Get a specific fingerprinting event
          var events = api.GetEvent("REQUEST_ID");
          Console.WriteLine(events);
put:
  tags:
    - Events
  operationId: 'updateEvent'
  summary: Update an event with a given request ID
  description: |
    Change information in existing events specified by `requestId` or *flag suspicious events*.
    
    When an event is created, it is assigned `linkedId` and `tag` submitted through the JS agent parameters. This information might not be available on the client so the Server API allows for updating the attributes after the fact.
    
    **Warning** It's not possible to update events older than 10 days.
  parameters:
    - name: request_id
      in: path
      description: The unique event [identifier](https://dev.fingerprint.com/docs/js-agent#requestid).
      required: true
      schema:
        type: string
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../components/schemas/EventUpdateRequest.yaml'
  responses:
    '200':
      description: OK
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ErrorUpdateEvent400Response.yaml'
          examples:
            example:
              summary: Example response
              externalValue: 'examples/update_event_400_error.json'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ErrorCommon403Response.yaml'
          examples:
            example:
              summary: Example response
              externalValue: 'examples/update_event_403_error.json'
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ErrorEvent404Response.yaml'
          examples:
            example:
              summary: Example response
              externalValue: 'examples/get_event_404_error.json'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ErrorUpdateEvent409Response.yaml'
          examples:
            example:
              summary: Example response
              externalValue: 'examples/update_event_409_error.json'
