openapi: 3.0.3
info:
  title: Fingerprint Pro Server API
  description: |
    Fingerprint Pro Server API allows you to get information about visitors and about individual events in a server environment. It can be used for data exports, decision-making, and data analysis scenarios.
    Server API is intended for server-side usage, it's not intended to be used from the client side, whether it's a browser or a mobile device.
  version: '3'
  contact:
    name: Fingerprint Support
    email: support@fingerprint.com
tags:
  - name: Events
    description: |
      Using the Server API you can retrieve information about individual analysis events using the event's `requestId`.
  - name: Visitors
    description: |
      Using the Server API you can retrieve visitor history of individual visitors using their `visitorId`.
servers:
  - url: https://api.fpjs.io
    description: Global
  - url: https://eu.api.fpjs.io
    description: EU
  - url: https://ap.api.fpjs.io
    description: Asia (Mumbai)
security:
  - ApiKeyHeader: []
  - ApiKeyQuery: []
x-readme:
  samples-languages:
    - curl
    - node
    - php
    - python
    - csharp
    - java
    - go
paths:
  /events/{request_id}:
    get:
      tags:
        - Events
      operationId: 'getEvent'
      summary: Get event by request ID
      description: |
        Get a detailed analysis of an individual identification event, including Smart Signals. 
        **Only for Enterprise customers:** Please note that the response includes mobile signals (e.g. `rootApps`) even if the request originated from a non-mobile platform.
        It is highly recommended that you **ignore** the mobile signals for such requests. 

        Use `requestId` as the URL path parameter. This API method is scoped to a request, i.e. all returned information is by `requestId`.
      parameters:
        - name: request_id
          in: path
          description: The unique [identifier](https://dev.fingerprint.com/docs/js-agent#requestid) of each identification request.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
              examples:
                fullResponse:
                  summary: Example response
                  externalValue: '/examples/get_event_200.json'
                allErrorsResponse:
                  summary: All failed signals
                  externalValue: '/examples/get_event_200_all_errors.json'
                withBotdError:
                  summary: BotD error
                  externalValue: '/examples/get_event_200_botd_failed_error.json'
                withBotdTooManyRequestsError:
                  summary: BotD too many requests error
                  externalValue: '/examples/get_event_200_botd_too_many_requests_error.json'
                withIdentificationError:
                  summary: Identification error
                  externalValue: '/examples/get_event_200_identification_failed_error.json'
                withIdentificationTooManyRequestsError:
                  summary: Identification too many requests error
                  externalValue: '/examples/get_event_200_identification_too_many_requests_error.json'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCommon403Response'
              examples:
                example:
                  summary: Forbidden
                  externalValue: '/examples/get_event_403_error.json'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEvent404Response'
              examples:
                example:
                  summary: Not found
                  externalValue: '/examples/get_event_404_error.json'
      x-readme:
        code-samples:
          - language: node
            name: Node SDK
            install: npm install @fingerprintjs/fingerprintjs-pro-server-api
            code: |
              import {
                FingerprintJsServerApiClient,
                Region,
              } from '@fingerprintjs/fingerprintjs-pro-server-api'

              const client = new FingerprintJsServerApiClient({
                apiKey: 'SERVER_API_KEY', // Replace with your key
                region: Region.Global, // Replace with your region
              })

              // Get a specific fingerprinting event
              client.getEvent('REQUEST_ID').then((event) => {
                console.log(event)
              })
          - language: php
            name: PHP SDK
            install: composer require fingerprint/fingerprint-pro-server-api-sdk
            code: |
              <?php
              require_once(__DIR__ . '/vendor/autoload.php');
              use Fingerprint\ServerAPI\Api\FingerprintApi;
              use Fingerprint\ServerAPI\Configuration;
              use GuzzleHttp\Client;

              $config = Configuration::getDefaultConfiguration(
                "SERVER_API_KEY", // Replace with your key
                Configuration::REGION_GLOBAL // Replace with your region
              );

              $client = new FingerprintApi(
                new Client(),
                $config
              );

              // Get a specific fingerprinting event
              try {
                $response = $client->getEvent("REQUEST_ID");
                echo "<pre>" . $response->__toString() . "</pre>";
              } catch (Exception $e) {
                echo $e->getMessage(), PHP_EOL;
              }
          - language: python
            name: Python SDK
            install: pip install fingerprint_pro_server_api_sdk
            code: |
              import fingerprint_pro_server_api_sdk
              from fingerprint_pro_server_api_sdk import EventResponse
              from fingerprint_pro_server_api_sdk import Response
              from fingerprint_pro_server_api_sdk.rest import ApiException

              configuration = fingerprint_pro_server_api_sdk.Configuration(
                api_key="SERVER_API_KEY", // Replace with your key
                region="us" // Replace with your region
              )
              api_instance = fingerprint_pro_server_api_sdk.FingerprintApi(configuration)

              # Get a specific fingerprinting event
              try:
                  event: EventResponse = api_instance.get_event("REQUEST_ID")
                  print(event)
              except ApiException as e:
                  print("Exception when getting an event: %s\n" % e)
          - language: golang
            name: Go SDK
            install: go get github.com/fingerprintjs/fingerprint-pro-server-api-go-sdk
            code: |
              package main

              import (
                "context"
                "fmt"
                "github.com/antihax/optional"
                "github.com/fingerprintjs/fingerprint-pro-server-api-go-sdk/v3/sdk"
                "log"
              )

              func main() {
                cfg := sdk.NewConfiguration()
                client := sdk.NewAPIClient(cfg)

                auth := context.WithValue(
                  context.Background(),
                  sdk.ContextAPIKey,
                  sdk.APIKey{Key: "SERVER_API_KEY"}, // Replace with your key
                )
                cfg.ChangeRegion(sdk.RegionUS) // Replace with your region

                // Get a specific fingerprinting event
                event, eventHttpRes, eventErr :=
                  client.FingerprintApi.GetEvent(auth, "REQUEST_ID")
                if eventErr != nil {
                  log.Fatal(eventErr)
                }
                fmt.Printf("Event: %s", event)
              }
          - language: java
            name: Java SDK
            code: |
              import com.fingerprint.api.FingerprintApi;
              import com.fingerprint.models.EventResponse;
              import com.fingerprint.models.Response;
              import com.fingerprint.sdk.ApiClient;
              import com.fingerprint.sdk.ApiException;
              import com.fingerprint.sdk.Configuration;
              import com.fingerprint.sdk.Region;

              public class FingerprintApiExample {
                public static void main(String... args) {
                  ApiClient client = Configuration.getDefaultApiClient(
                    "SERVER_API_KEY", // Replace with your key
                    Region.GLOBAL // Replace with your region
                  );
                  FingerprintApi api = new FingerprintApi(client);

                  // Get a specific fingerprinting event
                  try {
                    EventResponse response = api.getEvent("REQUEST_ID");
                    System.out.println(response.getProducts().toString());
                  } catch (ApiException e) {
                    System.err.println(e.getMessage());
                  }
                }
              }
          - language: csharp
            name: C# SDK
            install: dotnet add package FingerprintPro.ServerSdk
            code: |
              using FingerprintPro.ServerSdk.Api;
              using FingerprintPro.ServerSdk.Client;

              var configuration = new Configuration("SERVER_API_KEY"); // Replace with your key
              configuration.Region = Region.Us; // Replace with your region

              var api = new FingerprintApi(
                  configuration
              );

              // Get a specific fingerprinting event
              var events = api.GetEvent("REQUEST_ID");
              Console.WriteLine(events);
  /visitors/{visitor_id}:
    get:
      tags:
        - Visitors
      operationId: 'getVisits'
      summary: Get visits by visitor ID
      description: |
        Get a history of visits (identification events) for a specific `visitorId`. Use the `visitorId` as a URL path parameter.
        Only information from the _Identification_ product is returned.

        #### Headers

        * `Retry-After` — Present in case of `429 Too many requests`. Indicates how long you should wait before making a follow-up request. The value is non-negative decimal integer indicating the seconds to delay after the response is received.
      parameters:
        - name: visitor_id
          description: Unique [visitor identifier](https://dev.fingerprint.com/docs/js-agent#visitorid) issued by Fingerprint Pro.
          in: path
          required: true
          schema:
            type: string
          example: uYIm7Ksp5rf00SllPhFp
        - name: request_id
          description: |
            Filter visits by `requestId`. 

            Every identification request has a unique identifier associated with it called `requestId`. This identifier is returned to the client in the identification [result](https://dev.fingerprint.com/docs/js-agent#requestid). When you filter visits by `requestId`, only one visit will be returned.
          in: query
          schema:
            type: string
            # example: 1654815516083.OX6kx8
        - name: linked_id
          description: |
            Filter visits by your custom identifier. 

            You can use [`linkedId`](https://dev.fingerprint.com/docs/js-agent#linkedid) to associate identification requests with your own identifier, for example: session ID, purchase ID, or transaction ID. You can then use this `linked_id` parameter to retrieve all events associated with your custom identifier.
          in: query
          schema:
            type: string
          required:
            false
            # example: some_id
        - name: limit
          description: |
            Limit scanned results. 

            For performance reasons, the API first scans some number of events before filtering them. Use `limit` to specify how many events are scanned before they are filtered by `requestId` or `linkedId`. Results are always returned sorted by the timestamp (most recent first).
            By default, the most recent 100 visits are scanned, the maximum is 500.
          in: query
          schema:
            type: integer
            format: int32
            minimum: 0
            # default: 0
            # example: 10
        - name: paginationKey
          description: |
            Use `paginationKey` to get the next page of results. 

            When more results are available (e.g., you requested 200 results using `limit` parameter, but a total of 600 results are available), the `paginationKey` top-level attribute is added to the response. The key corresponds to the `requestId` of the last returned event. In the following request, use that value in the `paginationKey` parameter to get the next page of results:

            1. First request, returning most recent 200 events: `GET api-base-url/visitors/:visitorId?limit=200`
            2. Use `response.paginationKey` to get the next page of results: `GET api-base-url/visitors/:visitorId?limit=200&paginationKey=1683900801733.Ogvu1j`

            Pagination happens during scanning and before filtering, so you can get less visits than the `limit` you specified with more available on the next page. When there are no more results available for scanning, the `paginationKey` attribute is not returned.
          in: query
          schema:
            type: string
          required:
            false
            # example: 1683900801733.Ogvu1j
        - name: before
          description: |
            ⚠️ Deprecated pagination method, please use `paginationKey` instead. Timestamp (in milliseconds since epoch) used to paginate results.
          in: query
          schema:
            type: integer
            format: int64
            minimum: 0
            # default: 0
            # example: 1654815517198
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
              examples:
                limit1:
                  summary: Example response with limit=1
                  externalValue: '/examples/get_visits_200_limit_1.json'
                limit500:
                  summary: Example response with limit=500
                  externalValue: '/examples/get_visits_200_limit_500.json'
        '403':
          description: Forbidden. The API Key is probably missing or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorVisits403'
              examples:
                example:
                  summary: Forbidden
                  externalValue: '/examples/get_visits_403_error.json'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Indicates how many seconds you should wait before attempting the next request.
              schema:
                type: integer
                format: int32
                minimum: 0
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
              examples:
                example:
                  summary: Too Many Requests
                  externalValue: '/examples/get_visits_429_too_many_requests_error.json'
      x-readme:
        code-samples:
          - language: node
            name: Node SDK
            install: npm install @fingerprintjs/fingerprintjs-pro-server-api
            code: |
              import {
                FingerprintJsServerApiClient,
                Region,
              } from '@fingerprintjs/fingerprintjs-pro-server-api'

              const client = new FingerprintJsServerApiClient({
                apiKey: 'SERVER_API_KEY', // Replace with your key
                region: Region.Global, // Replace with your region
              })

              // Get visit history of a specific visitor
              client.getVisitorHistory('VISITOR_ID').then((visitorHistory) => {
                console.log(visitorHistory)
              })
          - language: php
            name: PHP SDK
            install: composer require fingerprint/fingerprint-pro-server-api-sdk
            code: |
              <?php
              require_once(__DIR__ . '/vendor/autoload.php');
              use Fingerprint\ServerAPI\Api\FingerprintApi;
              use Fingerprint\ServerAPI\Configuration;
              use GuzzleHttp\Client;

              $config = Configuration::getDefaultConfiguration(
                "SERVER_API_KEY", // Replace with your key
                Configuration::REGION_GLOBAL // Replace with your region
              );

              $client = new FingerprintApi(
                new Client(),
                $config
              );

              // Get visit history of a specific visitor
              try {
                $response = $client->getVisits("VISITOR_ID");
                echo "<pre>" . $response->__toString() . "</pre>";
              } catch (Exception $e) {
                echo $e->getMessage(), PHP_EOL;
              }
          - language: python
            name: Python SDK
            install: pip install fingerprint_pro_server_api_sdk
            code: |
              import fingerprint_pro_server_api_sdk
              from fingerprint_pro_server_api_sdk import EventResponse
              from fingerprint_pro_server_api_sdk import Response
              from fingerprint_pro_server_api_sdk.rest import ApiException

              configuration = fingerprint_pro_server_api_sdk.Configuration(
                api_key="SERVER_API_KEY", // Replace with your key
                region="us" // Replace with your region
              )
              api_instance = fingerprint_pro_server_api_sdk.FingerprintApi(configuration)

              # Get visit history of a specific visitor
              try:
                visits: Response = api_instance.get_visits("VISITOR_ID", limit=10)
                print(visits)
              except ApiException as e:
                print("Exception when getting visits: %s\n" % e)
          - language: golang
            name: Go SDK
            install: go get github.com/fingerprintjs/fingerprint-pro-server-api-go-sdk
            code: |
              package main

              import (
                "context"
                "fmt"
                "github.com/antihax/optional"
                "github.com/fingerprintjs/fingerprint-pro-server-api-go-sdk/v3/sdk"
                "log"
              )

              func main() {
                cfg := sdk.NewConfiguration()
                client := sdk.NewAPIClient(cfg)

                auth := context.WithValue(
                  context.Background(),
                  sdk.ContextAPIKey,
                  sdk.APIKey{Key: "SERVER_API_KEY"}, // Replace with your key
                )
                cfg.ChangeRegion(sdk.RegionUS) // Replace with your region

                // Get visit history of a specific visitor
                getVisitsOpts := sdk.FingerprintApiGetVisitsOpts{
                  Limit: optional.NewInt32(10),
                }
                history, historyHttpRes, historyErr :=
                  client.FingerprintApi.GetVisits(auth, "VISITOR_ID", &getVisitsOpts)
                if err != nil {
                  log.Fatal(err)
                }
                fmt.Printf("Visitor history: %s", history)
              }
          - language: java
            name: Java SDK
            code: |
              import com.fingerprint.api.FingerprintApi;
              import com.fingerprint.models.EventResponse;
              import com.fingerprint.models.Response;
              import com.fingerprint.sdk.ApiClient;
              import com.fingerprint.sdk.ApiException;
              import com.fingerprint.sdk.Configuration;
              import com.fingerprint.sdk.Region;

              public class FingerprintApiExample {
                public static void main(String... args) {
                  ApiClient client = Configuration.getDefaultApiClient(
                    "SERVER_API_KEY", // Replace with your key
                    Region.GLOBAL // Replace with your region
                  );
                  FingerprintApi api = new FingerprintApi(client);

                  // Get visit history of a specific visitor
                  try {
                    Response response = api.getVisits("VISITOR_ID");
                    System.out.println(response.getVisits().toString());
                  } catch (ApiException e) {
                    System.err.println(e.getMessage());
                  }
                }
              }
          - language: csharp
            name: C# SDK
            install: dotnet add package FingerprintPro.ServerSdk
            code: |
              using FingerprintPro.ServerSdk.Api;
              using FingerprintPro.ServerSdk.Client;

              var configuration = new Configuration("SERVER_API_KEY"); // Replace with your key
              configuration.Region = Region.Us; // Replace with your region

              var api = new FingerprintApi(
                  configuration
              );

              // Get visit history of a specific visitor
              var visits = api.GetVisits("VISITOR_ID");
              Console.WriteLine(visits);
    delete:
      tags:
        - Visitors
      operationId: 'deleteVisitorData'
      summary: Delete data by visitor ID
      description: |
        Request deleting all data associated with the specified visitor ID. This API is useful for compliance with privacy regulations.
        All delete requests are queued: 
        
        * Recent data (10 days or newer) belonging to the specified visitor will be deleted within 24 hours.
        * Data from older (11 days or more) identification events  will be deleted after 90 days.

        If you are interested in using this API, please [contact our support team](https://fingerprint.com/support/) to activate it for you. Otherwise, you will receive a 403.
      parameters:
        - name: visitor_id
          in: path
          description: The [visitor ID](https://dev.fingerprint.com/docs/js-agent#visitorid) you want to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. The visitor ID is scheduled for deletion.
        '400':
          description: Bad request. The visitor ID parameter is missing or in the wrong format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorVisitsDelete400Response'
              examples:
                example:
                  summary: Bad request
                  externalValue: '/examples/delete_visits_400_error.json'
        '403':
          description: Forbidden. Access to this API is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCommon403Response'
              examples:
                example:
                  summary: Forbidden
                  externalValue: '/examples/delete_visits_403_error.json'

        '404':
          description: Not found. The visitor ID cannot be found in this application's data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorVisitsDelete404Response'
              examples:
                example:
                  summary: Not found
                  externalValue: '/examples/delete_visits_404_error.json'
        '429':
          description: Too Many Requests. The request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCommon429Response'
              examples:
                example:
                  summary: Too Many Requests
                  externalValue: '/examples/delete_visits_429_error.json'
  /webhook:
    trace:
      tags:
        - Fingerprint
      description: Fake path to describe webhook format. More information about webhooks can be found in the [documentation](https://dev.fingerprint.com/docs/webhooks)
      responses:
        default:
          description: Dummy for the schema
      callbacks:
        webhook:
          webhook:
            post:
              description: You can use HTTP basic authentication and set up credentials in your [Fingerprint account](https://dashboard.fingerprint.com/login)
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/WebhookVisit'
                    example:
                      externalValue: '/examples/webhook.json'
              responses:
                default:
                  description: The server doesn't validate the answer.
components:
  securitySchemes:
    ApiKeyHeader:
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: Auth-API-Key # name of the header, query parameter or cookie
    ApiKeyQuery:
      type: apiKey
      in: query # can be "header", "query" or "cookie"
      name: api_key # name of the header, query parameter or cookie
  schemas:
    Response:
      type: object
      additionalProperties: false
      properties:
        visitorId:
          type: string
        visits:
          type: array
          items:
            title: ResponseVisits
            allOf:
              - $ref: '#/components/schemas/Visit'
              - required:
                  - tag
        lastTimestamp:
          description: |
            ⚠️ Deprecated paging attribute, please use `paginationKey` instead. Timestamp of the last visit in the current page of results.
          type: integer
          format: int64
          example: 1654815517198
        paginationKey:
          description: Request ID of the last visit in the current page of results. Use this value in the following request as the `paginationKey` parameter to get the next page of results.
          type: string
          example: '1654815517198.azN4IZ'
      required:
        - visitorId
        - visits
      title: PaginatedResponse
      description: Fields `lastTimestamp` and `paginationKey` added when `limit` or `before` parameter provided and there is more data to show
    ErrorCommon403Response:
      type: object
      additionalProperties: false
      properties:
        error:
          type: 'object'
          additionalProperties: false
          title: Common403ErrorResponse
          properties:
            code:
              type: string
              description: >
                Error code:
                 * `TokenRequired` - `Auth-API-Key` header is missing or empty
                 * `TokenNotFound` - No Fingerprint application found for specified secret key
                 * `SubscriptionNotActive` - Fingerprint application is not active
                 * `WrongRegion` - server and application region differ
                 * `FeatureNotEnabled` - this feature (for example, Delete API) is not enabled for your application 
              enum:
                - TokenRequired
                - TokenNotFound
                - SubscriptionNotActive
                - WrongRegion
                - FeatureNotEnabled
              example: 'TokenRequired'
            message:
              type: string
              example: 'secret key is required'
          required:
            - code
            - message
    ErrorCommon429Response:
      type: object
      additionalProperties: false
      properties:
        error:
          type: 'object'
          additionalProperties: false
          properties:          
            code:
              type: string
              description: >
                Error code:
                * `TooManyRequests` - The request is throttled.
              enum:
                - TooManyRequests
              example: 'TooManyRequests'
            message:
              type: string
              example: 'request throttled'
          required:
            - code
            - message
    ErrorEvent404Response:
      type: object
      additionalProperties: false
      properties:
        error:
          type: 'object'
          additionalProperties: false
          title: ErrorEvent404ResponseError
          properties:
            code:
              type: string
              description: >
                Error code:
                 * `RequestNotFound` - The specified request ID was not found. It never existed, expired, or it has been deleted.
              enum:
                - RequestNotFound
              example: 'RequestNotFound'
            message:
              type: string
              example: 'request id is not found'
          required:
            - code
            - message
    ErrorVisits403:
      type: object
      additionalProperties: false
      properties:
        error:
          type: string
          description: Error text.
          example: 'Forbidden (HTTP 403)'
      required:
        - error
    TooManyRequestsResponse:
      type: object
      additionalProperties: false
      properties:
        error:
          type: string
          description: Error text.
          example: 'request throttled'
      required:
        - error
    ErrorVisitsDelete404Response:
      type: object
      additionalProperties: false
      properties:
        error:
          type: 'object'
          additionalProperties: false
          title: ErrorVisitsDelete404ResponseError
          properties:
            code:
              type: string
              description: >
                Error code:
                * `VisitorNotFound` - The specified visitor ID was not found. It never existed or it may have already been deleted.
              enum:
                - VisitorNotFound
              example: 'VisitorNotFound'
            message:
              type: string
              example: 'visitor not found'
          required:
            - code
            - message
    ErrorVisitsDelete400Response:
      type: object
      additionalProperties: false
      properties:
        error:
          type: 'object'
          additionalProperties: false
          properties:
            code:
              type: string
              description: >
                Error code:
                * `RequestCannotBeParsed` - The visitor ID parameter is missing or in the wrong format.
              enum:
                - RequestCannotBeParsed
              example: 'RequestCannotBeParsed'
            message:
              type: string
              example: 'invalid visitor id'
          required:
            - code
            - message
    WebhookVisit:
      allOf:
        - type: object
          additionalProperties: false
          properties:
            visitorId:
              type: string
              example: '3HNey93AkBW6CRbxV6xP'
            clientReferrer:
              type: string
              example: 'https://google.com?search=banking+services'
            userAgent:
              type: string
              example: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36'
            bot:
              $ref: '#/components/schemas/BotdDetectionResult'
            ipInfo:
              $ref: '#/components/schemas/IpInfoResult'
            incognito:
              $ref: '#/components/schemas/IncognitoResult'
            rootApps:
              $ref: '#/components/schemas/RootAppsResult'
            emulator:
              $ref: '#/components/schemas/EmulatorResult'
            clonedApp:
              $ref: '#/components/schemas/ClonedAppResult'
            factoryReset:
              $ref: '#/components/schemas/FactoryResetResult'
            jailbroken:
              $ref: '#/components/schemas/JailbrokenResult'
            frida:
              $ref: '#/components/schemas/FridaResult'
            ipBlocklist:
              $ref: '#/components/schemas/IpBlockListResult'
            tor:
              $ref: '#/components/schemas/TorResult'
            privacySettings:
              $ref: '#/components/schemas/PrivacySettingsResult'
            virtualMachine:
              $ref: '#/components/schemas/VirtualMachineResult'
            vpn:
              $ref: '#/components/schemas/VpnResult'
            proxy:
              $ref: '#/components/schemas/ProxyResult'
            tampering:
              $ref: '#/components/schemas/TamperingResult'
            rawDeviceAttributes:
              $ref: '#/components/schemas/RawDeviceAttributesResult'
            highActivity:
              $ref: '#/components/schemas/HighActivityResult'
            locationSpoofing:
              $ref: '#/components/schemas/LocationSpoofingResult'
            suspectScore:
              $ref: '#/components/schemas/SuspectScoreResult'
          required:
            - visitorId
        - $ref: '#/components/schemas/Visit'
    Visit:
      type: object
      additionalProperties: false
      properties:
        requestId:
          description: Unique identifier of the user's identification request.
          type: string
          example: '1654815516083.OX6kx8'
        browserDetails:
          $ref: '#/components/schemas/BrowserDetails'
        incognito:
          description: Flag if user used incognito session.
          type: boolean
        ip:
          type: string
          format: ipv4
          example: '8.8.8.8'
        ipLocation:
          type: object
          additionalProperties: false
          deprecated: true
          description: This field is **deprecated** and will not return a result for **applications created after January 23rd, 2024**. Please use the [IP Geolocation Smart signal](https://dev.fingerprint.com/docs/smart-signals-overview#ip-geolocation) for geolocation information.
          properties:
            accuracyRadius:
              description: The IP address is likely to be within this radius (in km) of the specified location.
              type: integer
              minimum: 0
            latitude:
              type: number
              format: double
              minimum: -90
              maximum: 90
            longitude:
              type: number
              format: double
              minimum: -180
              maximum: 180
            postalCode:
              type: string
            timezone:
              type: string
              format: timezone
            city:
              type: object
              additionalProperties: false
              title: DeprecatedIPLocationCity
              properties:
                name:
                  type: string
            country:
              $ref: '#/components/schemas/Location'
            continent:
              $ref: '#/components/schemas/Location'
            subdivisions:
              type: array
              items:
                $ref: '#/components/schemas/Subdivision'
          title: DeprecatedIPLocation
        timestamp:
          description: Timestamp of the event with millisecond precision in Unix time.
          type: integer
          format: int64
          example: 1654815516086
        time:
          title: Time
          description: Time expressed according to ISO 8601 in UTC format.
          type: string
          format: date-time
          example: '2022-06-09T22:58:36Z'
        url:
          description: Page URL from which the identification request was sent.
          type: string
          example: 'https://some.website/path?query=params'
        tag:
          description: A customer-provided value or an object that was sent with identification request.
          type: object
          additionalProperties: true
        linkedId:
          description: A customer-provided id that was sent with identification request.
          type: string
          example: 'someID'
        confidence:
          $ref: '#/components/schemas/Confidence'
        visitorFound:
          description: Attribute represents if a visitor had been identified before.
          type: boolean
        firstSeenAt:
          $ref: '#/components/schemas/SeenAt'
        lastSeenAt:
          $ref: '#/components/schemas/SeenAt'
      required:
        - browserDetails
        - firstSeenAt
        - incognito
        - ip
        - lastSeenAt
        - requestId
        - time
        - timestamp
        - url
        - tag
        - visitorFound
      title: Visit
    BrowserDetails:
      type: object
      additionalProperties: false
      properties:
        browserName:
          type: string
          example: 'Chrome'
        browserMajorVersion:
          type: string
          example: '101'
        browserFullVersion:
          type: string
          example: '101.0.4951'
        os:
          type: string
          example: 'Windows'
        osVersion:
          type: string
          example: '10'
        device:
          type: string
          example: 'Other'
        userAgent:
          type: string
          example: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36'
        botProbability:
          type: integer
      required:
        - browserFullVersion
        - browserMajorVersion
        - browserName
        - device
        - os
        - osVersion
        - userAgent
      title: BrowserDetails
    Confidence:
      type: object
      additionalProperties: false
      properties:
        score:
          description: The confidence score is a floating-point number between 0 and 1 that represents the probability of accurate identification.
          type: number
          format: float
          minimum: 0
          maximum: 1
        revision:
          description: The revision name of the method used to calculate the Confidence score. This field is only present for customers who opted in to an alternative calculation method.
          type: string
      required:
        - score
      title: Confidence
    SeenAt:
      type: object
      additionalProperties: false
      properties:
        global:
          type: string
          nullable: true
          format: date-time
          example: '2022-05-05T18:28:54.535Z'
        subscription:
          type: string
          nullable: true
          format: date-time
          example: '2022-06-09T22:58:05.576Z'
      required:
        - global
        - subscription
      title: SeenAt
      example:
        global: '2022-05-05T18:28:54.535Z'
        subscription: null
    ASN:
      type: object
      additionalProperties: false
      properties:
        asn:
          type: string
          example: '7922'
        network:
          type: string
          example: '73.136.0.0/13'
        name:
          type: string
          example: 'COMCAST-7922'
      required:
        - asn
        - network
      title: ASN
    DataCenter:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
        name:
          type: string
          example: 'DediPath'
      required:
        - result
      title: DataCenter
    IPLocation:
      type: object
      additionalProperties: false
      properties:
        accuracyRadius:
          description: The IP address is likely to be within this radius (in km) of the specified location.
          type: integer
          minimum: 0
          example: 1000
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
          example: 37.75
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
          example: -97.82
        postalCode:
          type: string
          example: '130 00'
        timezone:
          type: string
          format: timezone
          example: 'America/Chicago'
        city:
          type: object
          additionalProperties: false
          title: IPLocationCity
          properties:
            name:
              type: string
              example: 'Prague'
        country:
          $ref: '#/components/schemas/Location'
        continent:
          $ref: '#/components/schemas/Location'
        subdivisions:
          type: array
          items:
            $ref: '#/components/schemas/Subdivision'
      title: IPLocation
    Location:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          minLength: 2
          maxLength: 2
          example: 'US'
        name:
          type: string
          example: 'United States'
      required:
        - code
        - name
      title: Location
    Subdivision:
      type: object
      additionalProperties: false
      properties:
        isoCode:
          type: string
          example: '10'
        name:
          type: string
          example: 'Hlavni mesto Praha'
    ProductsResponse:
      type: object
      description: Contains all information about the request identified by `requestId`, depending on the pricing plan (Pro, Pro Plus, Enterprise)
      additionalProperties: false
      properties:
        identification:
          type: object
          additionalProperties: false
          title: ProductsResponseIdentification
          properties:
            data:
              title: ProductsResponseIdentificationData
              allOf:
                - $ref: '#/components/schemas/Visit'
                - type: object
                  additionalProperties: false
                  properties:
                    visitorId:
                      type: string
                      description: |
                        String of 20 characters that uniquely identifies the visitor's browser.

                      example:
                        - Ibk1527CUFmcnjLwIs4A
                  required:
                    - visitorId
            error:
              $ref: '#/components/schemas/IdentificationError'
        botd:
          title: ProductsResponseBotd
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/BotdResult'
            error:
              $ref: '#/components/schemas/ProductError'
        ipInfo:
          title: SignalResponseIpInfo
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/IpInfoResult'
            error:
              $ref: '#/components/schemas/ProductError'
        incognito:
          title: SignalResponseIncognito
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/IncognitoResult'
            error:
              $ref: '#/components/schemas/ProductError'
        rootApps:
          title: SignalResponseRootApps
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/RootAppsResult'
            error:
              $ref: '#/components/schemas/ProductError'
        emulator:
          title: SignalResponseEmulator
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/EmulatorResult'
            error:
              $ref: '#/components/schemas/ProductError'
        clonedApp:
          title: SignalResponseClonedApp
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/ClonedAppResult'
            error:
              $ref: '#/components/schemas/ProductError'
        factoryReset:
          title: SignalResponseFactoryReset
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/FactoryResetResult'
            error:
              $ref: '#/components/schemas/ProductError'
        jailbroken:
          title: SignalResponseJailbroken
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/JailbrokenResult'
            error:
              $ref: '#/components/schemas/ProductError'
        frida:
          title: SignalResponseFrida
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/FridaResult'
            error:
              $ref: '#/components/schemas/ProductError'
        ipBlocklist:
          title: SignalResponseIpBlocklist
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/IpBlockListResult'
            error:
              $ref: '#/components/schemas/ProductError'
        tor:
          title: SignalResponseTor
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/TorResult'
            error:
              $ref: '#/components/schemas/ProductError'
        privacySettings:
          title: SignalResponsePrivacySettings
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/PrivacySettingsResult'
            error:
              $ref: '#/components/schemas/ProductError'
        virtualMachine:
          title: SignalResponseVirtualMachine
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/VirtualMachineResult'
            error:
              $ref: '#/components/schemas/ProductError'
        vpn:
          title: SignalResponseVpn
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/VpnResult'
            error:
              $ref: '#/components/schemas/ProductError'
        proxy:
          title: SignalResponseProxy
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/ProxyResult'
            error:
              $ref: '#/components/schemas/ProductError'
        tampering:
          title: SignalResponseTampering
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/TamperingResult'
            error:
              $ref: '#/components/schemas/ProductError'
        highActivity:
          title: SignalResponseHighActivity
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/HighActivityResult'
            error:
              $ref: '#/components/schemas/ProductError'
        locationSpoofing:
          title: SignalResponseLocationSpoofing
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/LocationSpoofingResult'
            error:
              $ref: '#/components/schemas/ProductError'
        suspectScore:
          title: SignalResponseSuspectScore
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/SuspectScoreResult'
            error:
              $ref: '#/components/schemas/ProductError'
        rawDeviceAttributes:
          title: SignalResponseRawDeviceAttributes
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/RawDeviceAttributesResult'
            error:
              $ref: '#/components/schemas/ProductError'
    EventResponse:
      description: Contains results from all activated products - Fingerprint Pro, Bot Detection, and others.
      type: object
      additionalProperties: false
      properties:
        products:
          $ref: '#/components/schemas/ProductsResponse'
        error:
          $ref: '#/components/schemas/ProductError'
      required:
        - products
    IdentificationError:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          description: >
            Error code:
             * `429 Too Many Requests` - the limit on secret API key requests per second has been exceeded
             * `Failed` - internal server error
          enum:
            - '429 Too Many Requests'
            - Failed
          example: '429 Too Many Requests'
        message:
          type: string
          example: 'too many requests'
      required:
        - code
        - message
    BotdResult:
      type: object
      additionalProperties: false
      description: Contains all the information from Bot Detection product
      properties:
        ip:
          type: string
          format: ipv4
          example: '8.8.8.8'
          description: IP address of the requesting browser or bot.
        time:
          title: Time
          description: Time in UTC when the request from the JS agent was made. We recommend to treat requests that are older than 2 minutes as malicious. Otherwise, request replay attacks are possible
          type: string
          format: date-time
          example: '2022-06-09T22:58:36Z'
        url:
          description: Page URL from which identification request was sent.
          type: string
          example: 'https://example.com/login'
        userAgent:
          type: string
          example: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36'
        requestId:
          type: string
          example: '1681392853693.lRiBBD'
        linkedId:
          type: string
          example: 'Automatic tests bot'
        bot:
          $ref: '#/components/schemas/BotdDetectionResult'
      required:
        - bot
        - url
        - ip
        - time
        - userAgent
        - requestId
    BotdDetectionResult:
      type: object
      additionalProperties: false
      description: Stores bot detection result
      properties:
        result:
          type: string
          description: >
            Bot detection result:
             * `notDetected` - the visitor is not a bot
             * `good` - good bot detected, such as Google bot, Baidu Spider, AlexaBot and so on
             * `bad` - bad bot detected, such as Selenium, Puppeteer, Playwright, headless browsers, and so on
          enum:
            - notDetected
            - good
            - bad
          example: 'bad'
        type:
          type: string
          example: 'selenium'
      required:
        - result
    IpInfoResult:
      type: object
      description: Details about the request IP address. Has separate fields for v4 and v6 IP address versions.
      additionalProperties: false
      properties:
        v4:
          type: object
          additionalProperties: false
          properties:
            address:
              type: string
              format: ipv4
              example: '94.142.239.124'
            geolocation:
              $ref: '#/components/schemas/IPLocation'
            asn:
              $ref: '#/components/schemas/ASN'
            datacenter:
              $ref: '#/components/schemas/DataCenter'
          required:
            - address
            - geolocation
        v6:
          type: object
          additionalProperties: false
          properties:
            address:
              type: string
              format: ipv6
              example: '2001:0db8:85a3:0000:0000:8a2e:0370:7334'
            geolocation:
              $ref: '#/components/schemas/IPLocation'
            asn:
              $ref: '#/components/schemas/ASN'
            datacenter:
              $ref: '#/components/schemas/DataCenter'
          required:
            - address
            - geolocation
    IpBlockListResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: >
            `true` if request IP address is part of any database that we use to search for known malicious actors, `false` otherwise.
          example: false
        details:
          type: object
          additionalProperties: false
          properties:
            emailSpam:
              type: boolean
              description: IP address was part of a known email spam attack (SMTP).
              example: false
            attackSource:
              type: boolean
              description: IP address was part of a known network attack (SSH/HTTPS).
              example: false
          required:
            - emailSpam
            - attackSource
      required:
        - result
        - details
    VpnResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: VPN or other anonymizing service has been used when sending the request.
          example: false
        originTimezone:
          type: string
          description: Local timezone which is used in timezoneMismatch method.
          example: 'Europe/Berlin'
        originCountry:
          type: string
          description: Country of the request (only for Android SDK version >= 2.4.0, ISO 3166 format or unknown).
          example: 'unknown'
        methods:
          type: object
          additionalProperties: false
          properties:
            timezoneMismatch:
              type: boolean
              description: The browser timezone doesn't match the timezone inferred from the request IP address.
              example: false
            publicVPN:
              type: boolean
              description: Request IP address is owned and used by a public VPN service provider.
              example: false
            auxiliaryMobile:
              type: boolean
              description: This method applies to mobile devices only. Indicates the result of additional methods used to detect a VPN in mobile devices.
              example: false
            osMismatch:
              type: boolean
              description: The browser runs on a different operating system than the operating system inferred from the  request network signature.
              example: false
          required:
            - timezoneMismatch
            - publicVPN
            - auxiliaryMobile
            - osMismatch
      required:
        - result
        - originTimezone
        - methods
    TamperingResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: Flag indicating whether browser tampering was detected according to our internal thresholds.
          example: false
        anomalyScore:
          type: number
          description: Confidence score (`0.0 - 1.0`) for the tampering detection. Values above `0.5` suggest that we're reasonably sure there was a tampering attempt. Values below `0.5` are genuine browsers.
          example: 0
          minimum: 0
          maximum: 1
      required:
        - result
        - anomalyScore
    HighActivityResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: Flag indicating whether the request came from a high activity visitor.
          example: false
        dailyRequests:
          type: number
          description: Number of requests from the same visitor in the previous day.
          example: 10
          minimum: 1
      required:
        - result
    LocationSpoofingResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: Flag indicating whether the request came from a mobile device with location spoofing enabled.
          example: false
      required:
        - result
    SuspectScoreResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: integer
          description: >
            Suspect Score is an easy way to integrate Smart Signals into your fraud protection work flow. 
            It is a weighted representation of all Smart Signals present in the payload that helps identify suspicious activity.
            The value range is [0; S] where S is sum of all Smart Signals weights. 
            See more details here: https://dev.fingerprint.com/docs/suspect-score
          example: 0
      required:
        - result
    RawDeviceAttributesResult:
      type: object
      description: >
        It includes 35+ raw browser identification attributes to provide Fingerprint users with even more information than our standard visitor ID provides.
        This enables Fingerprint users to not have to run our open-source product in conjunction with Fingerprint Pro Plus and Enterprise to get those additional attributes.

        Warning: The raw signals data can change at any moment as we improve the product. We cannot guarantee the internal shape of raw device attributes to be stable, so typical semantic versioning rules do not apply here. Use this data with caution without assuming a specific structure beyond the generic type provided here.
      additionalProperties:
        type: object
        properties:
          error:
            properties:
              name:
                title: error.name
                type: string
              message:
                title: error.message
                type: string
            required:
              - name
              - message
            title: error
            type: object
          value:
            title: value
    FactoryResetResult:
      type: object
      additionalProperties: false
      properties:
        time:
          title: Time
          description: >
            Time in UTC when the most recent factory reset of the Android or iOS device was done. 
            If there is no sign of factory reset or the client is not a mobile device, the field will contain the epoch time (1 January 1970) in UTC.
          type: string
          format: date-time
          example: '2022-06-09T22:58:36Z'
        timestamp:
          description: Same value as it's in the `time` field but represented in timestamp format.
          type: integer
          format: int64
          example: 1654815517198
      required:
        - time
        - timestamp
    ClonedAppResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: >
            Android specific cloned application detection. There are 2 values:
            • `true` - Presence of app cloners work detected (e.g. fully cloned application found or launch of it inside of a not main working profile detected).
            • `false` - No signs of cloned application detected or the client is not Android.
          example: false
      required:
        - result
    EmulatorResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: >
            Android specific emulator detection. There are 2 values:
            • `true` - Emulated environment detected (e.g. launch inside of AVD)
            • `false` - No signs of emulated environment detected or the client is not Android.
          example: false
      required:
        - result
    RootAppsResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: >
            Android specific root management apps detection. There are 2 values:
            • `true` - Root Management Apps detected (e.g. Magisk)
            • `false` - No Root Management Apps detected or the client isn't Android.
          example: false
      required:
        - result
    IncognitoResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: >
            `true` if we detected incognito mode used in the browser, `false` otherwise.
          example: false
      required:
        - result
    JailbrokenResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: >
            iOS specific jailbreak detection. There are 2 values:
            • `true` - Jailbreak detected
            • `false` - No signs of jailbreak or the client is not iOS.
          example: false
      required:
        - result
    FridaResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: >
            [Frida](https://frida.re/docs/) detection for Android and iOS devices. There are 2 values:
            • `true` - Frida detected
            • `false` - No signs of Frida or the client is not a mobile device.
          example: false
      required:
        - result
    TorResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: >
            `true` if the request IP address is a known tor exit node, `false` otherwise.
          example: false
      required:
        - result
    PrivacySettingsResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: >
            `true` if the request is from a privacy aware browser (e.g. Tor) or from a browser in which fingerprinting is blocked. Otherwise `false`.
          example: false
      required:
        - result
    VirtualMachineResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: >
            `true` if the request came from a browser running inside a virtual machine (e.g. VMWare), `false` otherwise.
          example: false
      required:
        - result
    ProxyResult:
      type: object
      additionalProperties: false
      properties:
        result:
          type: boolean
          description: >
            `true` if the request IP address is used by a public proxy provider, `false` otherwise.
          example: false
      required:
        - result
    ProductError:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          description: >
            Error code:
             * `TooManyRequests` - the limit on secret API key requests per second has been exceeded
             * `Failed` - internal server error
          enum:
            - TooManyRequests
            - Failed
          example: 'TooManyRequests'
        message:
          type: string
          example: 'too many requests'
      required:
        - code
        - message
