/events/search:
  get:
    x-readme:
      code-samples:
        - language: node
          name: Node SDK
          install: npm install @fingerprintjs/fingerprintjs-pro-server-api
          code: |
            import {
              FingerprintJsServerApiClient,
              Region,
            } from '@fingerprintjs/fingerprintjs-pro-server-api'

            const client = new FingerprintJsServerApiClient({
              apiKey: 'SERVER_API_KEY', // Replace with your key
              region: Region.Global, // Replace with your region
            })

            // Search for identification events
            client.searchEvents({
              limit: 10,
              suspect: true,
            }).then((events) => {
              console.log(events)
            })
        - language: php
          name: PHP SDK
          install: composer require fingerprint/fingerprint-pro-server-api-sdk
          code: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');
            use Fingerprint\ServerAPI\Api\FingerprintApi;
            use Fingerprint\ServerAPI\Configuration;
            use GuzzleHttp\Client;

            $config = Configuration::getDefaultConfiguration(
              "SERVER_API_KEY", // Replace with your key
              Configuration::REGION_GLOBAL // Replace with your region
            );

            $client = new FingerprintApi(
              new Client(),
              $config
            );

            // Search for identification events
            try {
              list($model, $response) = $client->searchEvents(10, visitor_id: "VISITOR_ID", suspect: true);
              echo "<pre>" . $response->getBody()->getContents() . "</pre>";
            } catch (Exception $e) {
              echo $e->getMessage(), PHP_EOL;
            }
        - language: csharp
          name: C# SDK
          install: dotnet add package FingerprintPro.ServerSdk
          code: |
            using FingerprintPro.ServerSdk.Api;
            using FingerprintPro.ServerSdk.Client;

            var configuration = new Configuration("SERVER_API_KEY"); // Replace with your key
            configuration.Region = Region.Us; // Replace with your region

            var api = new FingerprintApi(
                configuration
            );

            // Search for identification events
            var eventsFound = api.SearchEvents(10, suspect: true);
            Console.WriteLine(eventsFound);
        - language: python
          name: Python SDK
          install: pip install fingerprint_pro_server_api_sdk
          code: |
            import fingerprint_pro_server_api_sdk
            from fingerprint_pro_server_api_sdk.rest import ApiException

            configuration = fingerprint_pro_server_api_sdk.Configuration(
              api_key="SERVER_API_KEY", # Replace with your key
              region="us" # Replace with your region
            )
            api_instance = fingerprint_pro_server_api_sdk.FingerprintApi(configuration)

            # Search for identification events
            try:
                events = api_instance.search_events(10, suspect=True)
                print(events)
            except ApiException as e:
                print("Exception when calling FingerprintApi->search_events: %s\n" % e)
        - language: golang
          name: Go SDK
          install: go get github.com/fingerprintjs/fingerprint-pro-server-api-go-sdk/v7
          code: |
            package main

            import (
              "context"
              "fmt"
              "github.com/fingerprintjs/fingerprint-pro-server-api-go-sdk/v7/sdk"
              "log"
            )

            func main() {
              cfg := sdk.NewConfiguration()
              client := sdk.NewAPIClient(cfg)

              auth := context.WithValue(
                context.Background(),
                sdk.ContextAPIKey,
                sdk.APIKey{Key: "SERVER_API_KEY"}, // Replace with your key
              )
              cfg.ChangeRegion(sdk.RegionUS) // Replace with your region

              // Search for identification events
              suspect := true
              searchEventsOpts := sdk.FingerprintApiSearchEventsOpts{
                Suspect: &suspect,
              }
              searchEventsResult, httpRes, err := client.FingerprintApi.SearchEvents(auth, 10, &searchEventsOpts)
              if err != nil {
                log.Fatal(err)
              }
              fmt.Printf("Events: %s", searchEventsResult)
            }
        - language: java
          name: Java SDK
          code: |
            import com.fingerprint.api.FingerprintApi;
            import com.fingerprint.model.SearchEventsResponse;
            import com.fingerprint.sdk.ApiClient;
            import com.fingerprint.sdk.ApiException;
            import com.fingerprint.sdk.Configuration;
            import com.fingerprint.sdk.Region;

            public class FingerprintApiExample {
              public static void main(String... args) {
                ApiClient client = Configuration.getDefaultApiClient(
                  "SERVER_API_KEY", // Replace with your key
                  Region.GLOBAL // Replace with your region
                );
                FingerprintApi api = new FingerprintApi(client);

                // Search for identification events
                try {
                  SearchEventsResponse response = api.searchEvents(10, new FingerprintApi.SearchEventsOptionalParams().setSuspect(true));
                  System.out.println(response.getEvents().toString());
                } catch (ApiException e) {
                  System.err.println(e.getMessage());
                }
              }
            } 