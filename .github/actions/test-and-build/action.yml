name: 'Lint, build and test'
description: 'Action make all default routine for the project'
inputs:
  visitorId:
    description: 'VisitorId make request with'
    required: true
  privateKey:
    description: 'Fingerprint private API key'
    required: true
  requestId:
    description: 'Request ID for testing events endpoint'
    required: true
  testSubscriptions:
    description: 'An array of test subscription objects, see validateSchema.ts for the expected format'
    required: true
runs:
  using: 'composite'
  steps:
    - name: 'Install PNPM'
      uses: pnpm/action-setup@ebcfd6995dade4b0104ac774445cef8b3b4635b0
      with:
        version: 8
    - name: Set Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: pnpm
    - name: Install Node packages
      shell: bash
      run: pnpm install --frozen-lockfile --prefer-offline
    - name: Lint
      shell: bash
      run: pnpm lint
    - name: Tests
      shell: bash
      run: pnpm test
    - name: Build
      shell: bash
      env:
        PRIVATE_KEY: '${{ inputs.privateKey }}'
      run: pnpm build
    - name: Get installed Playwright version (used in cache key)
      shell: bash
      id: playwright-version
      run: echo "PLAYWRIGHT_VERSION=$(node -e "process.stdout.write(require('playwright/package.json').version)")" >> $GITHUB_ENV

    - name: Cache Playwright browser binaries
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: |
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
    - name: Install Playwright dependencies if necessary
      shell: bash
      run: pnpm playwright install --with-deps chromium
      if: steps.playwright-cache.outputs.cache-hit != 'true'
    - name: Validate schema
      shell: bash
      env:
        TEST_SUBSCRIPTIONS: '${{ inputs.testSubscriptions }}'
      run: pnpm validateSchema
